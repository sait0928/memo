<?php

/**
 * 挿入ソート(挿入法)
 * 1つずつデータを取り出して、すでに整列済みであるデータ列の適切な場所に挿入していくアルゴリズム
 */

// 整列対象の配列
$array = [5, 3, 1, 4, 2];
echo $array[0].', '.$array[1].', '.$array[2].', '.$array[3].', '.$array[4].PHP_EOL;

// データの個数
$count = count($array);

// 右端の番号(配列は 0 から始まるためデータの個数とは別に用意しておく)
$right = $count - 1;

// 0番目のデータを整列済みデータとみなし、1番目のデータから挿入していく
$i = 1;

// 右端まで順番に確認するので、i が right になったらその処理で終了
while($i <= $right) {
	// 整列済みデータの比較位置(i の左隣の位置から開始する)
	$j = $i - 1;

	// 左端まで順番に比較するので、j が 0 になったらその処理で終了
	while($j >= 0) {
		// jの値 と j+1(挿入するデータの現在地)の値 を比較
		if($array[$j] < $array[$j + 1]) {
			// 右の方が大きい場合、正しい位置に挿入できているためループを抜ける
			break;
		}
		// そうでない場合は交換してループを継続する

		// storage に一時的に jの値 を保存しておき
		$storage = $array[$j];

		// jの値 を j+1の値 で上書きしたら
		$array[$j] = $array[$j + 1];

		// j+1の値 を storage に保存しておいた jの値 で上書きする
		$array[$j + 1] = $storage;

		// j を1つ左にずらす
		$j--;
	}
	echo $array[0].', '.$array[1].', '.$array[2].', '.$array[3].', '.$array[4].PHP_EOL;
	// i を1つ右にずらす
	$i++;
}
